'use strict';

// 未登录跳转登录页
var goLogin = function goLogin() {
    return new Promise(function (resolve, reject) {
        var loginData = wx.getStorageSync('loginData');
        if (loginData == null || loginData == undefined || loginData == '') {
            wx.navigateTo({
                url: '../login/login'
            });
            resolve();
        } else {
            reject();
        }
    });
};

/** 
 * 时间戳格式化函数 
 * @param  {string} format    格式 
 * @param  {int}    timestamp 要格式化的时间 默认为当前时间 
 * @return {string}           格式化的时间字符串 
 */
var date = function date(format, timestamp) {
    var a,
        jsdate = timestamp ? new Date(timestamp * 1000) : new Date();
    var pad = function pad(n, c) {
        if ((n = n + "").length < c) {
            return new Array(++c - n.length).join("0") + n;
        } else {
            return n;
        }
    };
    var txt_weekdays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    var txt_ordin = { 1: "st", 2: "nd", 3: "rd", 21: "st", 22: "nd", 23: "rd", 31: "st" };
    var txt_months = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var f = {
        // Day 
        d: function d() {
            return pad(f.j(), 2);
        },
        D: function D() {
            return f.l().substr(0, 3);
        },
        j: function j() {
            return jsdate.getDate();
        },
        l: function l() {
            return txt_weekdays[f.w()];
        },
        N: function N() {
            return f.w() + 1;
        },
        S: function S() {
            return txt_ordin[f.j()] ? txt_ordin[f.j()] : 'th';
        },
        w: function w() {
            return jsdate.getDay();
        },
        z: function z() {
            return (jsdate - new Date(jsdate.getFullYear() + "/1/1")) / 864e5 >> 0;
        },

        // Week 
        W: function W() {
            var a = f.z(),
                b = 364 + f.L() - a;
            var nd2,
                nd = (new Date(jsdate.getFullYear() + "/1/1").getDay() || 7) - 1;
            if (b <= 2 && (jsdate.getDay() || 7) - 1 <= 2 - b) {
                return 1;
            } else {
                if (a <= 2 && nd >= 4 && a >= 6 - nd) {
                    nd2 = new Date(jsdate.getFullYear() - 1 + "/12/31");
                    return date("W", Math.round(nd2.getTime() / 1000));
                } else {
                    return 1 + (nd <= 3 ? (a + nd) / 7 : (a - (7 - nd)) / 7) >> 0;
                }
            }
        },

        // Month 
        F: function F() {
            return txt_months[f.n()];
        },
        m: function m() {
            return pad(f.n(), 2);
        },
        M: function M() {
            return f.F().substr(0, 3);
        },
        n: function n() {
            return jsdate.getMonth() + 1;
        },
        t: function t() {
            var n;
            if ((n = jsdate.getMonth() + 1) == 2) {
                return 28 + f.L();
            } else {
                if (n & 1 && n < 8 || !(n & 1) && n > 7) {
                    return 31;
                } else {
                    return 30;
                }
            }
        },

        // Year 
        L: function L() {
            var y = f.Y();return !(y & 3) && (y % 1e2 || !(y % 4e2)) ? 1 : 0;
        },
        //o not supported yet 
        Y: function Y() {
            return jsdate.getFullYear();
        },
        y: function y() {
            return (jsdate.getFullYear() + "").slice(2);
        },

        // Time 
        a: function a() {
            return jsdate.getHours() > 11 ? "pm" : "am";
        },
        A: function A() {
            return f.a().toUpperCase();
        },
        B: function B() {
            // peter paul koch: 
            var off = (jsdate.getTimezoneOffset() + 60) * 60;
            var theSeconds = jsdate.getHours() * 3600 + jsdate.getMinutes() * 60 + jsdate.getSeconds() + off;
            var beat = Math.floor(theSeconds / 86.4);
            if (beat > 1000) beat -= 1000;
            if (beat < 0) beat += 1000;
            if (String(beat).length == 1) beat = "00" + beat;
            if (String(beat).length == 2) beat = "0" + beat;
            return beat;
        },
        g: function g() {
            return jsdate.getHours() % 12 || 12;
        },
        G: function G() {
            return jsdate.getHours();
        },
        h: function h() {
            return pad(f.g(), 2);
        },
        H: function H() {
            return pad(jsdate.getHours(), 2);
        },
        i: function i() {
            return pad(jsdate.getMinutes(), 2);
        },
        s: function s() {
            return pad(jsdate.getSeconds(), 2);
        },
        //u not supported yet 

        // Timezone 
        //e not supported yet 
        //I not supported yet 
        O: function O() {
            var t = pad(Math.abs(jsdate.getTimezoneOffset() / 60 * 100), 4);
            if (jsdate.getTimezoneOffset() > 0) t = "-" + t;else t = "+" + t;
            return t;
        },
        P: function P() {
            var O = f.O();return O.substr(0, 3) + ":" + O.substr(3, 2);
        },
        //T not supported yet 
        //Z not supported yet 

        // Full Date/Time 
        c: function c() {
            return f.Y() + "-" + f.m() + "-" + f.d() + "T" + f.h() + ":" + f.i() + ":" + f.s() + f.P();
        },
        //r not supported yet 
        U: function U() {
            return Math.round(jsdate.getTime() / 1000);
        }
    };

    return format.replace(/[\\]?([a-zA-Z])/g, function (t, s) {
        if (t != s) {
            // escaped 
            var ret = s;
        } else if (f[s]) {
            // a date function exists 
            var ret = f[s]();
        } else {
            // nothing special 
            var ret = s;
        }
        return ret;
    });
};

//star code
/*获取当前页url*/
var getCurrentPageUrl = function getCurrentPageUrl() {
    var pages = getCurrentPages(); //获取加载的页面
    var currentPage = pages[pages.length - 1]; //获取当前页面的对象
    var url = currentPage.route; //当前页面url
    return url;
};

/*获取当前页带参数的url*/
var getCurrentPageUrlWithArgs = function getCurrentPageUrlWithArgs() {
    var pages = getCurrentPages(); //getCurrentPages() 函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，第一个元素为首页，最后一个元素为当前页面。
    var currentPage = pages[pages.length - 1]; //获取当前页面的对象
    var url = currentPage.route; //当前页面url
    var options = currentPage.options; //如果要获取url中所带的参数可以查看options

    //拼接url的参数
    var urlWithArgs = url + '?';
    for (var key in options) {
        var value = options[key];
        urlWithArgs += key + '=' + value + '&';
    }
    urlWithArgs = urlWithArgs.substring(0, urlWithArgs.length - 1);

    return urlWithArgs;
};

module.exports = {
    goLogin: goLogin,
    getCurrentPageUrl: getCurrentPageUrl,
    getCurrentPageUrlWithArgs: getCurrentPageUrlWithArgs,
    date: date
    // getFsMock
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,