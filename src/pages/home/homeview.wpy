<style lang="scss">
  .homeview {
    padding-bottom: 200rpx;
    position: relative;
  }
  .baseinfo{
    padding: 16rpx 28rpx;
  }
  .post {
      padding-top: 20rpx;
      padding-bottom: 24rpx;
      .ver {
        margin: 0 12rpx;
      }
      &-name {
        font-weight: bold;
        color: #353535;
        font-size: 36rpx;
      }
      &-sal {
        color: #FF9E00;
        font-size: 30rpx;
      }
      &-duty {
        padding-top: 10rpx;
        font-size: 22rpx;
        color: #B2B2B2;
        text-align:left;
      }
  }
  .weal {
    flex-flow: row wrap;
    text {
      margin-right: 10rpx;
      margin-bottom: 5rpx;
      padding: 3rpx 14rpx;
      border: 1rpx solid #ff9e00;
      border-radius: 18rpx;
      font-size: 24rpx;
      color: #ff9e00;
    }
  }
  .corp {
      padding-top: 4rpx;
      padding-bottom: 16rpx;
      image {
        margin-right: 16rpx;
        width: 60rpx;
        height: 60rpx;
      }
      &-name {
        font-size: 26rpx;
        color: #888;
      }
      &-type {
        font-size: 22rpx;
        color: #b2b2b2;
      }
  }
  .jobdec {
    padding: 11rpx 28rpx;
    &-txt {
      line-height: 40rpx;
      color: rgba(136, 136, 136, 1);
      font-size: 28rpx;
    }
    &-btn {
      margin: 20rpx 0;
      text-align: center;
      text{
        color: #ff9e00;
        font-size: 24rpx;
      }
    }
  }


  .address {
    margin: 12rpx 28rpx;
    padding-bottom: 10rpx;
    image {
      width: 24rpx;
      height: 36rpx;
    }
    text {
        margin-left: 12rpx;
        width:100%;
        color: #888888;
        font-size: 28rpx;
    }
  }

  .postlist {
    padding: 11rpx 28rpx;
  }
  .fixed {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    justify-content: center;
    height: 118rpx;
    border-top: 1px solid #E1E1E1;
    background-color: #fcfcfc;
    &-collect {
      margin: 0 40rpx 0 20rpx;
      width: 52rpx;
      height: 50rpx;
      image {
        width: 52rpx;
        height: 50rpx;
      }
    }
    .deliver {
      width: 586rpx;
      height: 80rpx;
      button {
        width: 586rpx;
        line-height: 80rpx;
        text-align: center;
        font-size: 36rpx;
        color: #fff;
      }
      .post-btn {
        background-color: #ff9e00;
      }
      .posted-btn {
        background-color: #d8d8d8;
      }
    }
    &.iphonex-btn {
      bottom:68rpx!important;
      &::after{
        content: ' ';
        position: fixed;
        bottom: 0!important;
        height: 68rpx!important;
        width: 100%;
        background: #fff;
      }
    }
  }


  .radio{
    image{
      width: 40rpx;
      height: 40rpx;
      display: block;
    }
  }
  .resumelist{
    text-align: left;
    padding: 0 32rpx;
    margin-top: -15rpx;
    .resumeitem{
      height: 120rpx;
    }
  }
  .stop{
    color: #999999;
  }
</style>

<template>
  <view class="homeview">
      <block wx:if="{{init}}">
        <!-- 职位基本信息 S -->
        <van-panel>
          <view class="baseinfo">
            <view class="post">
                <view class="flex">
                    <text class="post-name flex1">{{jobInfo.jobname}}</text>
                    <text wx:if="{{jobInfo.status=='4'}}" class="stop">停止招聘</text>
                    <text class="post-sal" wx:else>{{jobInfo.salary}}</text>
                </view>
                <view class="post-duty">
                    <text>{{jobInfo.jobcity}}</text>
                    <text class="ver" wx:if="{{jobInfo.workyears}}">|</text>
                    <text>{{jobInfo.workyears}}</text>
                    <text class="ver" wx:if="{{jobInfo.ebid}}">|</text>
                    <text>{{jobInfo.ebid}}</text>
                </view>
            </view>
            <view class="weal flex">
              <repeat for="{{jobInfo.weal}}" item="weal">
                <text>{{weal}}</text>
              </repeat>
            </view>
            <view class="gray-line"></view>
            <view class="corp flex alignitems" bindtap="goCorpView({{corpInfo.corpid}})">
                <image src="{{corpInfo.mlogo ? corpInfo.mlogo : 'https://www.51jrq.com/topics/images/51jrq_logo_gray.png'}}"></image>
                <view class=" flex1">
                    <text class="corp-name">{{corpInfo.corpname}}</text>
                    <view class="corp-type">{{corpInfo.industry}}</view>
                </view>
              <van-icon name="arrow" color="#cccccc" size="14" />
            </view>
          </view>
        </van-panel>
        <!-- 职位基本信息 E -->

        <view class="space"></view>
        
        <van-panel title="职位描述">
          <view class="jobdec">
            <text class="jobdec-txt" wx:if="{{isFold}}">{{jobdescriptionBrief}}</text>
            <text class="jobdec-txt" wx:else="{{isFold}}">{{jobInfo.jobdescription}}</text>
            <view class="jobdec-btn"  wx:if="{{descFoldShow}}">
              <text  @tap.stop="foldFn" wx:if="{{isFold}}">展开</text>
              <text  @tap.stop="foldFn" wx:else>收起</text>
            </view>
          </view>
        </van-panel>

        <view class="space"></view>

        <van-panel title="工作地址">
          <view class="address flex alignitems" @tap="goMap({{jobInfo.jobaddress}})">
              <image src="/images/icons/location_pink.png"></image>
              <text class="flex1">{{jobInfo.jobaddress}}</text>
          </view>
        </van-panel>

        <view class="space"></view>

        <van-panel title="相关职位推荐">
          <view class="postlist">
            <repeat for="{{relatedJobs}}" item="item">
              <relatedjob :syncRelatedJob="item"></relatedjob>
            </repeat>
          </view>
        </van-panel>

        <block wx:if="{{jobInfo.status=='2'}}">
          <view class="fixed flex alignitems {{isIpx?'iphonex-btn':''}}">
            <view class="fixed-collect">
              <image wx:if="{{collectid}}" @tap.stop="cancelCollect" src='/images/icons/like_hl.png'></image>
              <image wx:else @tap.stop="onCollectionFn" src='/images/icons/like.png'></image>
            </view>
            <view class="deliver">
              <button wx:if="{{isDelivery}}" class="posted-btn">已投递</button>
              <button wx:else @tap.stop="onDeliverFn" class="post-btn">投递职位</button>
            </view>
          </view>
          <shareminipro hidden="{{!showShareBtn}}" :urlWithArgs.sync="urlWithArgs" :currentUrl.sync="currentUrl" :jobInfo.sync="jobInfo" :corpInfo.sync="corpInfo" :dataOrg="dataOrg"></shareminipro>
        </block>

      </block>


      <!-- 初始化加载 S -->
      <loading :show.sync="init"></loading>
      <!-- 初始化加载 S -->

      <!-- 投递简历 S -->
      <van-dialog confirm-button-color="#ff9e00" use-slot title="选择简历" show="{{ visible1 }}" show-cancel-button bind:close="closedeliver" bind:confirm="deliver">
        <view class="resumelist">
          <repeat for="{{resumeList}}" key="index" index="index" item="item">
              <view class="resumeitem flex alignitems {{resumeList.length-1==index?'':'bb'}}" @tap="chooseResume({{index}})">
                  <text class="flex1">{{item.resumename}}</text>
                  <view class="radio">
                      <image wx:if="{{selIndex==index}}" src="/images/icons/sel.png" mode="scaleToFill"></image>
                      <image wx:else src="/images/icons/no-sel.png" mode="scaleToFill"></image>
                  </view>
              </view>
          </repeat>
        </view>
      </van-dialog>
      <!-- 投递简历 E -->

  </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '../../api/api';
    import tip from '../../utils/tip';
    import Loading from "../../components/loading";
    import {LOGIN_INFO} from '../../utils/constants';
    import RelatedJob from '../../components/relatedjob';
    import ShareMiniPro from '../../components/shareminipro';
    import utils from '../../utils/utils';

    export default class HomeView extends wepy.page {
      config = {
        navigationBarTitleText: '职位详情',
        enablePullDownRefresh:false,
        "usingComponents": {
            "van-icon": "../../vant/icon/index",
            "van-image": "../../vant/image/index",
            "van-overlay": "../../vant/overlay/index",
            "van-dialog": "../../vant/dialog/index",
            "van-action-sheet": "../../vant/action-sheet/index",
            "van-panel": "../../vant/panel/index"
        }
      }

      components = {
        relatedjob: RelatedJob,
        shareminipro: ShareMiniPro,
        loading:Loading,
      }

      data = {
        init: false,
        collectid:'',
        jobId: '',
        corpId: '',
        corpInfo: {},
        jobInfo: {},
        relatedJobs: [],
        isFav: false,   //未收藏
        isDelivery: false,    //未投递
        loginInfo: null,
        urlWithArgs: "",
        currentUrl: "",
        showShareBtn: false,
        dataOrg: "homeview",
        haveResume: true,
        isFold: true,
        jobdescriptionBrief: '',
        descFoldShow: true,
        isIpx: false,
        visible1:false,
        resumeList:[],
        selIndex:0,
      }
      onLoad(options){
        var that=this
        var pages = getCurrentPages(); // 当前页面
        const {jobid,corpid} = options
        this.jobId = jobid;
        this.corpId = corpid;
        let info = wx.getStorageSync('loginData') || null;
        this.loginInfo =  info
        this.urlWithArgs = utils.getCurrentPageUrlWithArgs();
        this.currentUrl = utils.getCurrentPageUrl();
        this.isIpx = this.$parent.globalData.isIpx;
        this.$apply();
        this.viewCompanyjob();
        if(info){
          this.getResumeList()
        }else{

        }
      }

      onReady(){
        this.showShareBtn = true;
      }

      onShareAppMessage (res) {
        const that = this;
        const corpname = that.corpInfo.corpname,
          jobname = that.jobInfo.jobname;
        let title = `${corpname}正在招聘 ${jobname}`;
        if (res.from === 'button') {
          // 来自页面内转发按钮
        }
        return {
          title: title.length > 30 ? title.slice(0, 29)+'...' : title,
          path: `/${that.currentUrl}?corpid=${that.corpId}&jobid=${that.jobId}`,
          success: function(res) {
            // 转发成功
            res.shareTickets // 单聊是没有的，注意必须要在分享前调用wx.showShareMenu方法，否则是不会带分享票据
          },
          fail: function(res) {
            // 转发失败
          }
        }
      }

      methods={
        cancelCollect(){
          const that = this
          utils.goLogin().catch(()=>{that.removeCollect()})
        },
        deliver(){
          let resumeid = this.resumeList[this.selIndex].resumeid
          this.visible1 =false
          this.$apply()
          this.deliverJob(this.jobId,resumeid)
        },
        closedeliver(){
          this.visible1 =false
          this.$apply()
        },

        chooseResume(selIndex) {// 切换简历
          this.selIndex = selIndex;
          this.$apply();
        },
        onCollectionFn(){
          // 未登录跳转登录页
          const that = this;
          utils.goLogin().catch(()=>{that.collectJob(that.jobId)})
        },
        onDeliverFn(){
          // 未登录跳转登录页
          const that = this;
          if(wx.getStorageSync('login')){

            if(that.resumeList.length==0){
              wx.redirectTo({
                url: `../personal/resume_list`
              })
            }else{
              this.visible1 = true
            }
          }else{
            wx.navigateTo({
              url: '/pages/login/login'
            })
          }

        },
        // 跳转公司详情页
        goCorpView(companyid){
          wx.navigateTo({
            url: `/pages/corporation/corpview?companyid=${companyid}`
          })
        },
        // 查看地图
        goMap(address){
            this.getAddress(address).then(data=>{
                if(data.data.status==0){
                    let addr = data.data.result.location;
                    wx.openLocation({
                        latitude: addr.lat,
                        longitude: addr.lng,
                        scale: 18,
                        address: address
                    })
                }else{
                    // wx.showToast({
                    //   title: `地址信息不全`,
                    //   icon: 'none'
                    // })
                }
            });
        },
        foldFn(){//切换展开
          this.isFold = !this.isFold;
        }
      }

      async viewCompanyjob(){//查看企业职位详细
        const that = this;
        const {loginInfo,corpId,jobId} = that
        const json = await api.getCompanyjob({
          query: {
            "head": {
                "transcode": "Q0002",
                "type": "h"
            },
            "data": {
                "token": loginInfo?loginInfo.token:'',
                "tokenKey": loginInfo?loginInfo.tokenKey:'',
                "corpid": corpId,
                "jobid": jobId
            }
          }
        });

        if (json.data.returnCode == "AAAAAAA") {
          const {data} = json.data
          that.corpInfo = { ...that.corpInfo, ...data.corpInfo };
          that.jobInfo = { ...that.jobInfo, ...data.jobInfo };
          that.collectid = data.jobcollectionid || ''
          if (that.jobInfo.jobdescription.length > 100) {
            that.jobdescriptionBrief = that.jobInfo.jobdescription.substring(0, 100) + '......'
            that.descFoldShow = true;
          } else {
            that.jobdescriptionBrief = that.jobInfo.jobdescription;
            that.descFoldShow = false;
          }
          that.relatedJobs = data.relatedJobs;
          that.isFav = data.isFav;
          that.isDelivery = data.isDelivery;
          that.$apply();
        } else {
          tip.error(returnMsg);
        }
        that.init = true
        that.$apply();
      }


      async collectJob(jobid) {//企业职位收藏
        const that = this;
        const {loginInfo} = that
        const json = await api.getCompanyjob({
          query: {
            head: {
                "transcode": "Q0004",
                "type": "h"
            },
            data: {
                "token": loginInfo?loginInfo.token:'',
                "tokenKey": loginInfo?loginInfo.tokenKey:'',
                "jobid": jobid
            }
          }
        })

        const {returnCode,data} = json.data
        if (returnCode == "AAAAAAA") {
          that.collectid = data.jobcollectionid
          tip.success("职位收藏成功");
          that.isFav = !that.isFav;
          that.$apply();
        } else {
          tip.error(returnMsg);
        }
    }
    // 获取简历列表
    async getResumeList() {
        const that = this;
        const {loginInfo} = that
        const json = await api.getCollectJob({
        query: {
            head: {
                "transcode": "P0001",
                "type": "h"
            },
            data: {
              "token": loginInfo?loginInfo.token:'',
              "tokenKey": loginInfo?loginInfo.tokenKey:'',
            }
          }
        })
        const {returnCode,data} = json.data
        if(returnCode == "AAAAAAA") {
            if (data.length > 0) {
                that.resumeList = data;
                that.resumeid = data[0].resumeid;
                that.$apply();
            }else{
                that.haveResume = false;
                that.$apply();
            }
        }else{
            that.haveResume = false;
            that.$apply();
        }
        // wx.hideLoading()
    }

    // 取消收藏
    async removeCollect() {
        const that = this;
        const {loginInfo} = that
        const json = await api.getCollectJob({
        query: {
            head: {
                "transcode": "M0027",
                "type": "h"
            },
            data: {
              "token": loginInfo?loginInfo.token:'',
              "tokenKey": loginInfo?loginInfo.tokenKey:'',
              "id":that.collectid+''
            }
          }
        })
        if(json.data.returnCode == "AAAAAAA") {
          console.log('取消收藏',json.data);
          that.collectid=''
          that.$apply()
        }
        // wx.hideLoading()
    }



    //企业职位申请
    async deliverJob(jobid, resumeid) {
        const that = this;
        const {loginInfo} = that
        const json = await api.getCompanyjob({
            query: {
                head: {
                    "transcode": "Q0003",
                    "type": "h"
                },
                data: {
                  "token": loginInfo?loginInfo.token:'',
                  "tokenKey": loginInfo?loginInfo.tokenKey:'',
                  "jobid": jobid,
                  "resumeid": resumeid
                }
            }
        })
        if (json.data.returnCode == "AAAAAAA") {
            that.isDelivery = !that.isDelivery;
            tip.success("投递成功");
            that.$apply();
        } else {
            tip.error(json.data.returnMsg);
        }
        that.$apply();
    }

    // 打开地图
    async getAddress(address) {
      const json = await api.getCityName({
          method: "GET",
          address: address
      })
      return json;
    }
  }

</script>
