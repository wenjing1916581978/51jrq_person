<style lang="less">
@import "../../styles/form.less";
</style>
<template>
  <view class="form container">
    <view class="form_item bb pb">
        <view class="form_label">项目名称</view>
        <view class="form_content">
            <input bindinput="inputChange" placeholder-class="phcolor" type="text" data-name="projectname" value="{{projectname}}" placeholder="请填写" />
        </view>
    </view>
    <view class="form_item bb pb">
        <view class="form_label">公司名称</view>
        <view class="form_content">
            <input bindinput="inputChange" placeholder-class="phcolor" type="text" data-name="companyname" value="{{companyname}}" placeholder="请填写" />
        </view>
    </view>
    <view class="form_item pb bb">
      <view class="form_label">开始时间</view>
      <picker mode="multiSelector" bindchange="starttimeChange" bindcolumnchange="starttimeColumnChange" value="{{starttimeIndex}}" range="{{starttimeArray}}">
        <view class="form_content flex alignitems">
          <view class="flex1">{{starttime?starttime:"请选择"}}</view>
          <van-icon name="arrow" size="18" color="#888888"/>
        </view>
      </picker>
    </view>
    <view class="form_item pb bb">
        <view class="form_label">结束时间</view>
        <picker mode="multiSelector" bindchange="endtimeChange" bindcolumnchange="endtimeColumnChange" value="{{endtimeIndex}}" range="{{endtimeArray}}">
          <view class="form_content flex alignitems">
            <view class="flex1">{{endtime?endtime:"请选择"}}</view>
            <van-icon name="arrow" size="18" color="#888888"/>
          </view>
        </picker>

    </view>

    <view class="form_item bb pb">
        <view class="form_label">项目描述/职责</view>
        <view class="form_content">
          <textarea wx:if="{{!visible}}" bindinput="inputChange" maxlength="500" data-name="projectremark" value="{{projectremark}}" placeholder="请输入项目描述、职责（500字以内）" placeholder-class="phcolor"/>
        </view>
    </view>


    <view class="form_btn flex">
      <button class="delbtn" @tap="toggleM" wx:if="{{projectid!=''&&length>1}}">删除</button>
      <button class="mainbtn flex1" @tap="formSubmit">保存</button>
    </view>
    <van-dialog title="删除"  use-slot  show="{{ visible }}" show-cancel-button  bind:confirm="handleOk" bind:cancel="toggleM" confirm-button-color="#ff9e00">
      <view class="deltips">是否确认删除？</view>
    </van-dialog>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '../../api/api';
  import tip from '../../utils/tip';
  let monthArr =[1,2,3,4,5,6,7,8,9,10,11,12]
  import moment from 'moment'

  export default class BaseInfo extends wepy.page {

    config = {
      navigationBarTitleText: '项目经验',
      navigationBarBackgroundColor: "#fafafa",
      usingComponents: {
        "van-dialog": "../../vant/dialog/index",
        "van-icon": "../../vant/icon/index"
      }
    }

    data = {
      projectname:'',
      companyname:'',
      starttime:'',
      endtime:'',
      projectremark:'',
      projectid:'',
      token: '',
      tokenKey: '',
      resumeid:'',
      length:0,
      endtimeArray: [['至今'], ['至今']],
      endtimeIndex: [0, 0],
      starttimeArray: [['至今'], []],
      starttimeIndex: [0, 0],
      visible:false,
    }

    onLoad(options) {
      const that = this;
      let login = wx.getStorageSync('login')
      that.resumeid = options.resumeid || '21080211';
      that.projectid = options.projectid || '';
      that.token = login.token
      that.tokenKey = login.tokenKey
      that.$apply();
      if(that.projectid) that.getData()


      let one = []
      let now = new Date()
      let currentY = now.getFullYear()
      let currentM = now.getMonth()+1

      for(var i=0;i<31;i++){
        let v = currentY-i
        one.push(v+'')
        if(i==30) one.push(v+'以前')
      }


      this.starttimeArray[0] = one
      this.starttimeArray[1] = monthArr
      let a=['至今']
      var newA = [...a,...one]
      this.endtimeArray[0] = newA
      this.$apply()

    }

    methods = {
      endtimeChange: function (e) {
        const {endtimeArray} = this
        let v = e.detail.value
        if(v[0]==0 || v[0]==32){
          this.endtime = endtimeArray[0][v[0]]
        }else{
          let month = parseInt(v[1])+1
          let r = month<10?'0'+month:month
          this.endtime =endtimeArray[0][v[0]]+'/'+ r
        }
        this.multiIndex= e.detail.value
        this.$apply()
      },
      endtimeColumnChange: function (e) {
        var data = {
          endtimeArray: this.endtimeArray,
          endtimeIndex: this.endtimeIndex
        };
        data.endtimeIndex[e.detail.column] = e.detail.value;
        if(e.detail.column==0){
          if(data.endtimeIndex[0]==0){
            data.endtimeArray[1] = ['至今'];
            data.endtimeIndex[1] = 0
          }else if(data.endtimeIndex[0]==32){
            let arr= data.endtimeArray[0]
            data.endtimeArray[1] = [arr[arr.length-1]]
            data.endtimeIndex[1] = 0
          }else{
            data.endtimeArray[1] = monthArr
          }
        }
        this.$apply()
      },
      starttimeChange: function (e) {
        const {starttimeArray} = this
        let v = e.detail.value
        if(v[0]==31){
          this.starttime = starttimeArray[0][v[0]]
        }else{
          let month = parseInt(v[1])+1
          let r = month<10?'0'+month:month
          this.starttime =starttimeArray[0][v[0]]+'/'+ r
        }
        this.multiIndex= e.detail.value
        this.$apply()
      },
      starttimeColumnChange: function (e) {
        var data = {
          starttimeArray: this.starttimeArray,
          starttimeIndex: this.starttimeIndex
        };
        data.starttimeIndex[e.detail.column] = e.detail.value;
          if(data.starttimeIndex[0]==31){
            let arr= data.starttimeArray[0]
            data.starttimeArray[1] = [arr[arr.length-1]]
            data.starttimeIndex[1] = 0
          }else{
            data.starttimeArray[1] = monthArr
          }
        this.$apply()
      },

      handleOk(){
        this.delExperience()
      },
      toggleM(){
        console.log('切换状态')
        this.visible = !this.visible
        this.$apply()
      },
      // 提交表单--基本信息编辑新增
      formSubmit: function(e) {
        const that = this
        if(!that.projectname){
          tip.error('项目名称不为空');
          return false
        }
        if(!that.companyname){
          tip.error('公司名称不为空');
          return false
        }
        if(!that.starttime){
          tip.error('请选择开始时间');
          return false
        }
        if(!that.endtime){
          tip.error('请选择结束时间');
          return false
        }
        if(!that.projectremark){
          tip.error('项目描述不为空');
          return false
        }


        let startTime=that.starttime
        let endTime=that.endtime

        if(startTime.indexOf('/')!=-1) startTime = startTime.replace(/\//g,"-")

        if(moment(moment().format('YYYY-MM')).diff(moment(startTime), 'months')<0){
          tip.error('起始时间不能大于当前时间')
          return false
        }

        if(that.endtime.indexOf('以前')!=-1&&that.starttime.indexOf('以前')==-1){
          tip.error('起始时间不能大于结束时间')
          return false
        }

        if(that.starttime.indexOf('以前')==-1&&(that.endtime!='至今'&&that.endtime.indexOf('以前')==-1)){

          if(endTime.indexOf('/')!=-1) endTime = endTime.replace(/\//g,"-")
          if(startTime.indexOf('/')!=-1) startTime = startTime.replace(/\//g,"-")
          let diff = moment(endTime).diff(moment(startTime), 'months')
          if(diff<0){
            tip.error('起始时间不能大于结束时间')
            return false
          }

        }

        this.changeData()
      },
      inputChange(e){
        const { form }=this
        const name = e.currentTarget.dataset.name
        this[name] = e.detail.value;
        this.$apply();
      },
      dateChange: function(e) {
        const name = e.currentTarget.dataset.name
        this[name] = e.detail.value.replace(/-/g,"/");
        this.$apply();
      }
    }

    // //获取简历基本信息
    getData() {
      const that = this
      wx.showLoading({
          title: '加载中',
      })
      api.getResumeInfo({
        query: {
          head: {
              "transcode": "M0008",
              "type": "h"
          },
          data: {
              "token": that.token,
              "tokenKey": that.tokenKey,
              "resumeid": that.resumeid
          }
        }
      }).then(res=>{
        console.log(res,'获取基本信息')
        if (res.data.returnCode == "AAAAAAA") {
          wx.hideLoading()
          var jobExper = JSON.parse(res.data.data);
          console.log('项目经历',jobExper)

          let resultArr = jobExper.find(item => item.projectid == that.projectid)
          that.projectname = resultArr.projectname;
          that.length = jobExper.length
          that.companyname = resultArr.companyname;
          that.starttime = resultArr.starttime;
          that.endtime = resultArr.endtime;
          that.projectremark = resultArr.projectremark;
          that.$apply();
        } else {
          tip.error(res.data.returnMsg);
        }
      }).catch(err=>{

      })
    }
    // 删除经历
    delExperience() {
      const that = this
      api.delExperience({
        query: {
            head: {
                "transcode": "M0030",
                "type": "h"
            },
            data: {
              token: that.token,
              tokenKey: that.tokenKey,
              resumeid:that.resumeid,
              projectid:that.projectid
            }
        }
      }).then(res=>{
        if (res.data && res.data.returnCode == "AAAAAAA") {
          tip.success('删除成功');
          let pages = getCurrentPages();
          let prevPage = pages[pages.length - 2];
          prevPage.update(4)
          wx.navigateBack({
           delta: 1
          })
        } else {
            tip.error(res.returnMsg);
        }
      }).catch(err=>{

      })
    }

    //修改表单数据
    changeData() {
      const  that  = this
      wx.showLoading({
          title: '加载中',
      })
      let obj= {
        projectname:that.projectname ,
        companyname:that.companyname ,
        starttime:that.starttime ,
        endtime:that.endtime ,
        projectremark:that.projectremark ,
        projectid:that.projectid ,
        token: that.token,
        tokenKey: that.tokenKey,
        resumeid:that.resumeid
      }
      api.getResumeInfo({
          query: {
            head: {
              "transcode": "M0018",
              "type": "h"
            },
            data: obj
          }
      }).then(res=>{
        wx.hideLoading()
        if(res.data && res.data.returnCode == "AAAAAAA") {
            let pages = getCurrentPages();
            let prevPage = pages[pages.length - 2];
            prevPage.update(4)
            wx.navigateBack({
             delta: 1
           })
        }else{
            console.log(data)
        }

      })
    }
  }
</script>
