<style lang="less">
@import "../../styles/form.less";
</style>
<template>
  <view class="form container">

    <view class="form_item bb">
        <view class="form_label">证书名称</view>
        <view class="form_content">
            <input placeholder-class="phcolor" type="text" data-name="certname" value="{{certname}}" placeholder="请填写" bindinput="inputChange"/>
        </view>
    </view>
    <view class="form_item bb">
        <view class="form_label">获得时间</view>
        <picker start="{{start}}" end="{{end}}" name="gaintime" mode="date" value="{{gaintime}}" fields="month" bindchange="bindDateChange2">
            <view class="form_content flex alignitems">
                <view class="flex1">{{gaintime?gaintime:"请选择"}}</view>
                <van-icon name="arrow" size="18" color="#888888"/>
            </view>
        </picker>
    </view>

    <view class="form_btn flex">
      <button class="delbtn" @tap="toggleM" wx:if="{{certid!=''&&length>1}}">删除</button>
      <button class="mainbtn flex1" @tap="formSubmit">保存</button>
    </view>
    <van-dialog title="删除"  use-slot  show="{{ visible }}" show-cancel-button  bind:confirm="handleOk" bind:cancel="toggleM" confirm-button-color="#ff9e00">
      <view class="deltips">是否确认删除？</view>
    </van-dialog>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '../../api/api';
  import tip from '../../utils/tip';
  import moment from 'moment'

  export default class BaseInfo extends wepy.page {
    config = {
      navigationBarTitleText: '证书',
      navigationBarBackgroundColor: "#fafafa",
      usingComponents: {
        "van-dialog": "../../vant/dialog/index",
        "van-icon": "../../vant/icon/index"
      }
    }

    data = {
      certname:'',
      gaintime:'',
      certid:'',
      token: "",
      tokenKey: "",
      resumeid:'',
      length:0,
      start:'',
      end:'',
      visible:false
    }

    onLoad(options) {
      const that = this;
      let login = wx.getStorageSync('login')
      that.certid = options.certid || '';
      that.resumeid = options.resumeid;
      that.token = login.token
      that.tokenKey = login.tokenKey

      that.end = moment().format("YYYY-MM")
      that.start = moment().subtract(30, "years").format("YYYY-MM")
      that.$apply();

      if(that.certid) that.getData()

    }

    methods = {
      handleOk(){
        this.delExperience()
      },
      toggleM(){
        console.log('切换状态')
        this.visible = !this.visible
        this.$apply()
      },
        // 提交表单--基本信息编辑新增
        formSubmit: function(e) {
          const that = this
          if(!that.certname){
            tip.error('证书名称不为空');
            return false
          }
          if(!that.gaintime){
            tip.error('获取时间不为空');
            return false
          }

          let gaintime=that.gaintime

          if(gaintime.indexOf('/')!=-1) gaintime = gaintime.replace(/\//g,"-")

          if(moment(moment().format('YYYY-MM')).diff(moment(gaintime), 'months')<0){
            tip.error('获得证书时间不能大于当前时间');
            return false
          }

          this.changeData()
        },
        inputChange(e){
          const name = e.currentTarget.dataset.name
          this[name] = e.detail.value;
          this.$apply();
        },
        bindDateChange1: function(e) {
            this.starttime = e.detail.value;
            this.$apply();
        },
        bindDateChange2: function(e) {
            this.gaintime = e.detail.value.replace(/-/g,"/");
            this.$apply();
        },
    }

    //获取证书
    getData() {
      const that = this
      wx.showLoading({
          title: '加载中',
      })
      api.getResumeInfo({
        query: {
            head: {
                "transcode": "M0010",
                "type": "h"
            },
            data: {
                "token": that.token,
                "tokenKey": that.tokenKey,
                "resumeid": that.resumeid
            }
          }
        }).then(res=>{
          if (res.data.returnCode == "AAAAAAA") {
              wx.hideLoading()
              var jobExper = JSON.parse(res.data.data);
              that.length = jobExper.length;
              let resultArr = jobExper.find(item => item.certid == that.certid)
              that.certname = resultArr.certname;
              that.gaintime = resultArr.gaintime;
              that.$apply();
          } else {
              tip.error(res.returnMsg);
          }
        })

    }

    // 删除经历
    delExperience() {
      const that = this
      api.delExperience({
        query: {
          head: {
              "transcode": "M0031",
              "type": "h"
          },
          data: {
            token: that.token,
            tokenKey: that.tokenKey,
            resumeid:that.resumeid,
            certid:that.certid
          }
        }
      }).then(res=>{
        if (res.data && res.data.returnCode == "AAAAAAA") {
          tip.success('删除成功');
          let pages = getCurrentPages();
          let prevPage = pages[pages.length - 2];
          prevPage.update(5)
          wx.navigateBack({
           delta: 1
          })
        } else {
            tip.error(res.returnMsg);
        }
      }).catch(err=>{

      })
    }

    //修改表单数据
    async changeData() {
      const that = this
      wx.showLoading({
        title: '加载中',
      })
      let obj = {
        token: that.token,
        tokenKey: that.tokenKey,
        resumeid: that.resumeid,
        gaintime:that.gaintime,
        certname:that.certname,
        certid:that.certid
      }
      api.getResumeInfo({
        query: {
                head: {
                    "transcode": "M0020",
                    "type": "h"
                },
                data: obj
            }
        }).then(res=>{
          if(res.data && res.data.returnCode == "AAAAAAA") {
             let pages = getCurrentPages();
              let prevPage = pages[pages.length - 2];
              prevPage.update(5)
              wx.navigateBack({
               delta: 1
             })
          }else{
              console.log(data)
          }
          wx.hideLoading()
        })
    }
  }
</script>
